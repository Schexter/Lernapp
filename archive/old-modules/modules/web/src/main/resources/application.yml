# Application Configuration - Base Settings
# Erstellt von Hans Hahn - Alle Rechte vorbehalten

# ================================================
# SERVER CONFIGURATION
# ================================================
server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    whitelabel:
      enabled: false
    include-stacktrace: never
    include-message: always

# ================================================
# APPLICATION INFORMATION
# ================================================
spring:
  application:
    name: fachinformatiker-lernapp
  profiles:
    active: dev
  
  # ================================================
  # WEB CONFIGURATION
  # ================================================
  web:
    resources:
      static-locations: classpath:/static/
      cache:
        period: 31536000 # 1 Jahr für statische Ressourcen
    locale: de_DE
    locale-resolver: fixed

  # ================================================
  # THYMELEAF CONFIGURATION
  # ================================================
  thymeleaf:
    enabled: true
    cache: false # Development
    encoding: UTF-8
    mode: HTML
    prefix: classpath:/templates/
    suffix: .html
    servlet:
      content-type: text/html

  # ================================================
  # DATABASE CONFIGURATION (Default H2)
  # ================================================
  datasource:
    url: jdbc:h2:mem:lernapp_dev
    driver-class-name: org.h2.Driver
    username: sa
    password: 
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000

  # ================================================
  # JPA/HIBERNATE CONFIGURATION
  # ================================================
  jpa:
    hibernate:
      ddl-auto: create-drop # Development
      naming:
        physical-strategy: org.hibernate.boot.model.naming.SnakeCasePhysicalNamingStrategy
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        generate_statistics: false
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.jcache.JCacheRegionFactory

  # ================================================
  # H2 CONSOLE (Development)
  # ================================================
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false

  # ================================================
  # CACHING CONFIGURATION
  # ================================================
  cache:
    type: simple # In-Memory für Development
    cache-names:
      - questions
      - users
      - topics
      - progress

  # ================================================
  # MAIL CONFIGURATION (Development)
  # ================================================
  mail:
    host: localhost
    port: 1025 # MailHog für Development
    username: 
    password: 
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false

  # ================================================
  # FLYWAY MIGRATION
  # ================================================
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    schemas: public

# ================================================
# ACTUATOR CONFIGURATION
# ================================================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,configprops,flyway,caches
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true

# ================================================
# LOGGING CONFIGURATION
# ================================================
logging:
  level:
    com.hanshahn.fachinformatiker: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.flyway: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/lernapp.log
    max-size: 10MB
    max-history: 30

# ================================================
# APPLICATION SPECIFIC CONFIGURATION
# ================================================
app:
  # Sicherheit
  security:
    jwt:
      secret: "lernapp-jwt-secret-key-change-in-production"
      expiration: 86400000 # 24 Stunden
      refresh-expiration: 604800000 # 7 Tage
    password:
      min-length: 8
      require-uppercase: true
      require-lowercase: true
      require-numbers: true
      require-special-chars: false
    rate-limiting:
      enabled: true
      requests-per-minute: 60
      requests-per-hour: 1000

  # Learning Engine
  learning:
    # Spaced Repetition Algorithmus
    spaced-repetition:
      enabled: true
      initial-interval: 1 # Tage
      ease-factor: 2.5
      minimum-ease-factor: 1.3
      maximum-ease-factor: 4.0
    
    # Prüfungsmodus
    examination:
      default-time-limit: 180 # Minuten
      auto-submit: true
      shuffle-questions: true
      shuffle-answers: true
      show-progress: true

  # File Upload
  upload:
    max-file-size: 10MB
    max-request-size: 50MB
    allowed-extensions: jpg,jpeg,png,gif,pdf,doc,docx
    storage-path: uploads/

  # Notifications
  notifications:
    email:
      enabled: true
      from: noreply@fachinformatiker-lernapp.de
      reply-to: support@fachinformatiker-lernapp.de
    push:
      enabled: false # Für spätere PWA Implementation

# ================================================
# SPRING DOC (API Documentation)
# ================================================
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: method
  show-actuator: true

# ================================================
# DEVELOPMENT TOOLS
# ================================================
spring.devtools:
  restart:
    enabled: true
    exclude: static/**,public/**
  livereload:
    enabled: true
