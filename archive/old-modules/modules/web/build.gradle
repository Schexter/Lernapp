// Web Module Build Configuration
// Erstellt von Hans Hahn - Alle Rechte vorbehalten

plugins {
    id 'org.springframework.boot'
}

description = 'Web controllers, templates and REST APIs'

dependencies {
    // Module Dependencies
    implementation project(':lernapp-core')
    implementation project(':lernapp-security')
    
    // Spring Boot Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    
    // Template Engine Extras
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    
    // Monitoring & Management
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    
    // Mail Support
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    
    // File Upload
    implementation 'commons-fileupload:commons-fileupload:1.5'
    
    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    
    // Development Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:selenium'
    testImplementation 'org.seleniumhq.selenium:selenium-java'
}

// Spring Boot executable jar configuration
jar {
    enabled = false
}

bootJar {
    archiveClassifier = ''
    mainClass = 'com.hanshahn.fachinformatiker.LernappApplication'
    
    // Include version info
    manifest {
        attributes(
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
            'Implementation-Vendor': 'Hans Hahn',
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date().format('yyyy-MM-dd HH:mm:ss'),
            'Built-JDK': System.getProperty('java.version')
        )
    }
}

// Docker image building
task buildDockerImage(type: Exec) {
    dependsOn bootJar
    commandLine 'docker', 'build', '-t', "fachinformatiker-lernapp:${project.version}", '.'
}
