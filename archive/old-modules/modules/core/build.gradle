// Core Module Build Configuration
// Erstellt von Hans Hahn - Alle Rechte vorbehalten

plugins {
    id 'org.springframework.boot' apply false
}

description = 'Core domain models, repositories and business services'

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    
    // Database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    
    // Database Migration
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Utility Libraries
    implementation 'org.apache.commons:commons-lang3'
    implementation 'commons-io:commons-io:2.15.1'
    
    // Caching
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
}

// Task to generate JPA metamodel
task generateMetamodel(type: JavaCompile) {
    source = sourceSets.main.java
    classpath = configurations.compileClasspath
    destinationDirectory = file("$buildDir/generated/sources/metamodel")
    options.compilerArgs += ['-proc:only', '-AaddGeneratedAnnotation=false']
}

sourceSets.main.java.srcDir "$buildDir/generated/sources/metamodel"
compileJava.dependsOn generateMetamodel
